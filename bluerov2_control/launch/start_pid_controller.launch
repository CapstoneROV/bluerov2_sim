<?xml version="1.0"?>
<launch>
  <!-- This launch file will start the controller nodes with the necessary parameters

    Vehicle namespace: since the simulation can run with multiple vehicle, each vehicle
    is created under a namespace, which is per default equal to the name of vehicle model, but
    can be assigned differently at startup
  -->
  <arg default="bluerov2" name="uuv_name"/>
  <!-- Name of the vehicle model: the name of the robot model -->
  <arg default="$(arg uuv_name)" name="model_name"/>
  <!-- Flag to start recoding a rosbag  -->
  <arg default="false" name="record"/>
  <!-- Flag to RViz -->
  <arg default="false" name="rviz"/>
  <!-- Flag to Show GUI -->
  <arg name="gui_on" default="false"/>
  <!-- Flag to NED Referential -->
  <arg default="false" name="use_ned_frame"/>
  <arg default="false" name="accel_control"/>
  <arg default="false" name="veloc_control"/>
  <arg default="false" name="traj_control"/>
  <!--
    The controller parameters are given below and will be given to the controller node in its
    private namespace. These are vectors and for roslaunch to see this as one argument, there
    can be no spaces between the commas and the floating point values. The default values
    are usually the ones that are going to be used.
    -->
  <arg default="1000.0,0.0,0.0,0.0,0.0,0.0" name="Kp"/>
  <arg default="0.0,0.0,0.0,0.0,0.0,0.0" name="Ki"/>
  <arg default="0.0,0.0,0.0,0.0,0.0,0.0" name="Kd"/>
  <!-- Teleop Arguments -->
  <arg default="false" name="teleop_on"/>
  <arg default="0" name="joy_id"/>
  <arg default="2" name="axis_yaw"/>
  <arg default="1" name="axis_x"/>
  <arg default="0" name="axis_y"/>
  <arg default="3" name="axis_z"/>

  <!-- Thruster manager configuration: thruster allocation matrix pre-calculated with start_thruster_manager.launch (the recomend) -->
  <arg default="$(find bluerov2_control)/config" name="thruster_manager_output_dir"/>
  <arg default="$(find bluerov2_control)/config/thruster_manager.yaml" name="thruster_manager_config_file"/>

  <!-- File containing the thruster allocation matrix -->
  <arg default="$(find bluerov2_control)/config/TAM.yaml" name="tam_file"/>
  <group if="$(arg traj_control)">
    <!-- Trajectory Control -->
    <include file="$(find uuv_trajectory_control)/launch/rov_pid_controller.launch">
      <arg name="uuv_name" value="$(arg uuv_name)"/>
      <arg name="gui_on" value="$(arg gui_on)"/>
      <arg name="saturation" value="2000"/>
      <arg name="Kp" value="$(arg Kp)"/>
      <arg name="Kd" value="$(arg Kd)"/>
      <arg name="Ki" value="$(arg Ki)"/>
      <arg name="use_ned_frame" value="$(arg use_ned_frame)"/>
      <arg name="thruster_manager_output_dir" value="$(arg thruster_manager_output_dir)"/>
      <arg name="thruster_manager_config_file" value="$(arg thruster_manager_config_file)"/>
      <arg name="tam_file" value="$(arg tam_file)"/>
    </include>
    <!-- Joystick teleop node  -->
    <group if="$(arg teleop_on)">
      <!-- Start joystick teleop node  -->
      <include file="$(find uuv_teleop)/launch/uuv_teleop.launch">
        <arg name="uuv_name" value="$(arg uuv_name)"/>
        <arg name="joy_id" value="$(arg joy_id)"/>
        <arg name="output_topic" value="cmd_vel"/>
        <arg name="message_type" value="twist"/>
        <arg name="axis_yaw" value="$(arg axis_yaw)"/>
        <arg name="axis_x" value="$(arg axis_x)"/>
        <arg name="axis_y" value="$(arg axis_y)"/>
        <arg name="axis_z" value="$(arg axis_z)"/>
        <arg default="0.5" name="gain_yaw"/>
        <arg default="1.0" name="gain_x"/>
        <arg default="1.0" name="gain_y"/>
        <arg default="1.0" name="gain_z"/>
      </include>
    </group>
  </group>
  <!-- Acceleration Control -->
  <group if="$(arg accel_control)">
    <group ns="$(arg uuv_name)">
      <rosparam command="load" file="$(find bluerov2_control)/config/inertial.yaml"/>
      <node name="acceleration_control" output="screen" pkg="uuv_control_cascaded_pid" type="AccelerationControl.py">
        <param name="tf_prefix" type="string" value="$(arg uuv_name)/"/>
      </node>
    </group>
    <include file="$(find bluerov2_control)/launch/start_thruster_manager.launch"/>
    <group if="$(arg teleop_on)">
      <include file="$(find uuv_teleop)/launch/uuv_teleop.launch">
        <arg name="uuv_name" value="$(arg uuv_name)"/>
        <arg name="joy_id" value="$(arg joy_id)"/>
        <arg name="output_topic" value="cmd_accel"/>
        <arg name="message_type" value="accel"/>
        <arg name="axis_yaw" value="$(arg axis_yaw)"/>
        <arg name="axis_x" value="$(arg axis_x)"/>
        <arg name="axis_y" value="$(arg axis_y)"/>
        <arg name="axis_z" value="$(arg axis_z)"/>
        <arg default="0.5" name="gain_yaw"/>
        <arg default="1.0" name="gain_x"/>
        <arg default="1.0" name="gain_y"/>
        <arg default="1.0" name="gain_z"/>
      </include>
    </group>
  </group>
  <!-- RViz  -->
  <group if="$(arg rviz)">
    <!-- Start RViz  -->
    <node args="-d $(find bluerov2_gazebo)/rviz/bluerov2.rviz" name="rviz" output="screen" pkg="rviz" type="rviz"/>
  </group>
</launch>